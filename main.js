!function(){"use strict";class t{constructor(t,e,s){let{name:i,link:r}=t;this._name=i,this._link=r,this._cardSelector=s,this._handleImageClick=e,this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__trash-button"),this._setEventListeners()}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLike),this._trashButton.addEventListener("click",(()=>this._deleteCard())),this._cardImage.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_handleLike=()=>{this._likeButton.classList.toggle("card__like-button_active")};_deleteCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardImage.src=this._link,this._cardImage.alt=`Photo of ${this._name}`,this._element.querySelector(".card__title").textContent=this._name,this._element}}class e{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}class s{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(t=>{t.target===t.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}}class i extends s{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._popupForm.querySelectorAll("input"),this._handleFormSubmit=e}_getInputValues(){const t={};return this._formInputs.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}class r{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e,this._inputList=this._form.querySelectorAll(this._inputSelector),console.log(this._inputList),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleInputState(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_checkValidity(t){return!t.validity.valid}_hasInvalidInput=()=>Array.from(this._inputList).some(this._checkValidity);_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this.disableButton(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._toggleInputState(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}}const n=document.querySelector(".profile__button"),o=document.querySelector("#profile-title-input"),l=document.querySelector("#profile-subtitle-input"),a=document.querySelector(".profile__card-button"),c=document.forms.formAddCard,u=document.forms.profileForm,_=new class{constructor(t){console.log(t.headers),this.baseUrl=t.baseUrl,this.headers=t.headers,console.log(this.headers)}_checkResponse(t){return t.ok?t.json():Promise.reject(`Erorr: ${t.status}`)}_request(t,e){return fetch(t,e).then(this._checkResponse)}getInitialCards(){return this._request(`${this.baseUrl}/cards`,{headers:this.headers})}_loadData(){return this.getInitialCards()}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"739decfe-71be-4d0d-8961-a71a0f6cba52","Content-Type":"application/json"}}),h={};var d;d={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__input-error_visible",modalSelector:".modal__form"},Array.from(document.querySelectorAll(d.modalSelector)).forEach((t=>{const e=new r(d,t),s=t.getAttribute("name");h[s]=e,e.enableValidation()}));const m=new class extends s{constructor(t){super({popupSelector:t}),this._image=this._popupElement.querySelector(".preview__image"),this._caption=this._popupElement.querySelector(".preview__caption"),super.setEventListeners()}open(t){this._caption.textContent=t.name,this._image.src=t.link,this._image.alt=`image ${t.name}`,super.open()}}("#preview_image");function p(e){return new t(e,(t=>{m.open(t)}),"#card-template").getView()}let v;_.getInitialCards().then((t=>{v=new e({items:t,renderer:t=>{(void 0).addItem(p(t))}},".cards"),v.renderItems()})).catch((t=>{console.error("Error fetching initial cards:",t)}));const E=new i("#modalAddCard",(t=>{const e=p(t);E.close(),v.addItem(e),h[c.getAttribute("name")].disableButton()}));a.addEventListener("click",(()=>{E.open()})),E.setEventListeners();const b=new class{constructor(t,e){this._name=document.querySelector(t),this._subtitle=document.querySelector(e)}getUserInfo(){return{name:this._name.textContent,subtitle:this._subtitle.textContent}}setUserInfo(t,e){this._name.textContent=t,this._subtitle.textContent=e}}(".profile__title",".profile__subtitle"),g=new i("#modalEdit",(t=>{let{name:e,subtitle:s}=t;b.setUserInfo(e,s),g.close()}));n.addEventListener("click",(()=>{!function(){const t=b.getUserInfo();o.value=t.name,l.value=t.subtitle,g.open()}(),function(){const t=h[u.getAttribute("name")];t.resetValidation(),t.disableButton()}()})),g.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,