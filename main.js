!function(){"use strict";class t{constructor(t,e,s){let{name:n,link:i}=t;this._name=n,this._link=i,this._cardSelector=s,this._handleImageClick=e,this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__trash-button"),this._setEventListeners()}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLike),this._trashButton.addEventListener("click",(()=>this._deleteCard())),this._cardImage.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}_handleLike=()=>{this._likeButton.classList.toggle("card__like-button_active")};_deleteCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardImage.src=this._link,this._cardImage.alt=`Photo of ${this._name}`,this._element.querySelector(".card__title").textContent=this._name,this._element}}class e{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(t=>{t.target===t.currentTarget&&this.close()})),this._closeButton.addEventListener("click",(()=>this.close()))}}class s extends e{constructor(t,e){super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._popupForm.querySelectorAll("input"),this._handleFormSubmit=e}_getInputValues(){const t={};return this._formInputs.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}const n=[{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}];class i{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e,this._inputList=this._form.querySelectorAll(this._inputSelector),console.log(this._inputList),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleInputState(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_checkValidity(t){return!t.validity.valid}_hasInvalidInput=()=>Array.from(this._inputList).some(this._checkValidity);_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this.disableButton(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._toggleInputState(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}}const o=document.querySelector(".profile__button"),r=document.querySelector("#profile-title-input"),a=document.querySelector("#profile-subtitle-input"),l=document.querySelector(".profile__card-button"),u=document.forms.formAddCard,c=document.forms.profileForm,_={};var m;m={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input-error",errorClass:"modal__input-error_visible",modalSelector:".modal__form"},Array.from(document.querySelectorAll(m.modalSelector)).forEach((t=>{const e=new i(m,t),s=t.getAttribute("name");_[s]=e,e.enableValidation()}));const d=new class extends e{constructor(t){super({popupSelector:t}),this._image=this._popupElement.querySelector(".preview__image"),this._caption=this._popupElement.querySelector(".preview__caption"),super.setEventListeners()}open(t){this._caption.textContent=t.name,this._image.src=t.link,this._image.alt=`image ${t.name}`,super.open()}}("#preview_image");function h(e){return new t(e,(t=>{d.open(t)}),"#card-template").getView()}const p=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:n,renderer:t=>{const e=h(t);p.addItem(e)}},".cards__list");p.renderItems(n);const g=new s("#modalAddCard",(t=>{const e=h(t);g.close(),p.addItem(e),_[u.getAttribute("name")].disableButton()}));l.addEventListener("click",(()=>{g.open()})),g.setEventListeners();const v=new class{constructor(t,e){this._name=document.querySelector(t),this._subtitle=document.querySelector(e)}getUserInfo(){return{name:this._name.textContent,subtitle:this._subtitle.textContent}}setUserInfo(t,e){this._name.textContent=t,this._subtitle.textContent=e}}(".profile__title",".profile__subtitle"),E=new s("#modalEdit",(t=>{let{name:e,subtitle:s}=t;v.setUserInfo(e,s),E.close()}));o.addEventListener("click",(()=>{!function(){const t=v.getUserInfo();r.value=t.name,a.value=t.subtitle,E.open()}(),function(){const t=_[c.getAttribute("name")];t.resetValidation(),t.disableButton()}()})),E.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,